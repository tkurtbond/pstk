<?xml version="1.0"?>
<html>
<head>

    <link rel="last" href="tkwm.htm" title="tk/wm" />
    <link rel="first" href="bitmap.htm" title="bitmap" />
    <link rel="section" href="bitmap.htm" title="bitmap" />
    <link rel="section" href="evalwish.htm" title="eval-wish" />
    <link rel="section" href="gettkvar.htm" title="get-tk-var" />
    <link rel="section" href="photo.htm" title="photo" />
    <link rel="section" href="settkvar.htm" title="set-tk-var!" />
    <link rel="section" href="tk.htm" title="tk" />
    <link rel="section" href="tkidwidget.htm" title="tk-id-&gt;widget" />
    <link rel="section" href="tkvar.htm" title="tk-var" />
    <link rel="section" href="tkafter.htm" title="tk/after" />
    <link rel="section" href="tkappname.htm" title="tk/appname" />
    <link rel="section" href="tkbind.htm" title="tk/bind" />
    <link rel="section" href="tkbindtags.htm" title="tk/bindtags" />
    <link rel="section" href="tkcaret.htm" title="tk/caret" />
    <link rel="section" href="tkchoosecolor.htm" title="tk/choosecolor" />
    <link rel="section" href="tkchoosedirectory.htm" title="tk/choosedirectory" />
    <link rel="section" href="tkclipboard.htm" title="tk/clipboard" />
    <link rel="section" href="tkconsole.htm" title="tk/console" />
    <link rel="section" href="tkdestroy.htm" title="tk/destroy" />
    <link rel="section" href="tkdialog.htm" title="tk/dialog" />
    <link rel="section" href="tkevent.htm" title="tk/event" />
    <link rel="section" href="tkfocus.htm" title="tk/focus" />
    <link rel="section" href="tkgetopenfile.htm" title="tk/getopenfile" />
    <link rel="section" href="tkgetsavefile.htm" title="tk/getsavefile" />
    <link rel="section" href="tkgrab.htm" title="tk/grab" />
    <link rel="section" href="tkgrid.htm" title="tk/grid" />
    <link rel="section" href="tkimage.htm" title="tk/image" />
    <link rel="section" href="tklower.htm" title="tk/lower" />
    <link rel="section" href="tkmessagebox.htm" title="tk/messagebox" />
    <link rel="section" href="tkoption.htm" title="tk/option" />
    <link rel="section" href="tkpack.htm" title="tk/pack" />
    <link rel="section" href="tkplace.htm" title="tk/place" />
    <link rel="section" href="tkpopup.htm" title="tk/popup" />
    <link rel="section" href="tkraise.htm" title="tk/raise" />
    <link rel="section" href="tkscaling.htm" title="tk/scaling" />
    <link rel="section" href="tkupdate.htm" title="tk/update" />
    <link rel="section" href="tkuseinputmethods.htm" title="tk/useinputmethods" />
    <link rel="section" href="tkwait.htm" title="tk/wait" />
    <link rel="section" href="tkwindowingsystem.htm" title="tk/windowingsystem" />
    <link rel="section" href="tkwinfo.htm" title="tk/winfo" />
    <link rel="section" href="tkwm.htm" title="tk/wm" />
    <link rel="up" href="../Commands.htm" title="Commands" />
    <link rel="prev" href="tkdialog.htm" title="tk/dialog" />
    <link rel="contents" href="../Meta/Sitemap.htm" title="Sitemap" />
    <link rel="start" href="../../index.htm" title="Chicken/Tk" />
    <link rel="author" href="../Meta/Author.htm" title="Author" />
    <link rel="subsection" href="event/tkevent_add.htm" title="tk/event add" />
    <link rel="subsection" href="event/tkevent_delete.htm" title="tk/event delete" />
    <link rel="subsection" href="event/tkevent_generate.htm" title="tk/event generate" />
    <link rel="subsection" href="event/tkevent_info.htm" title="tk/event info" />
    <link rel="chapter" href="../Preface.htm" title="Preface" />
    <link rel="chapter" href="../Introduction.htm" title="Introduction" />
    <link rel="chapter" href="../Tutorial.htm" title="Tutorial" />
    <link rel="chapter" href="../Implementation.htm" title="Implementation" />
    <link rel="chapter" href="../Commands.htm" title="Commands" />
    <link rel="chapter" href="../Options.htm" title="Options" />
    <link rel="chapter" href="../Extensions.htm" title="Extensions" />
    <link rel="chapter" href="../List_of_Changes.htm" title="List of Changes" />
    <link rel="next" href="event/tkevent_add.htm" title="tk/event add" /> 
<title>
tk/event</title>
 
<link rel="stylesheet" href="../res/css/examples/navigationtree/BlueGray/layout.css" />
 
<link rel="stylesheet" href="../res/css/examples/navigationtree/BlueGray/color.css" />

<style type="text/css">
dt {
	color: #000080;
	font-family: monospace;
	
}
</style>
</head>
 
<body style="padding: 0; margin: 0"><table border="0" cellpadding="0" cellspacing="0" width="100%" height="100%">
<tr>
<td colspan="2" class="navicolumn">&#160;</td>
 
<td></td>
 
<td></td>
 
<td></td>
</tr>
 
<tr>
<td rowspan="2" class="navicolumn"><img src="../res/css/examples/navigationtree/BlueGray/bg_00.gif" height="1" width="20" /></td>
 
<td rowspan="2" align="right" class="navicolumn"><img src="../res/css/examples/navigationtree/BlueGray/Titelhintergrund_l.gif" /></td>
 
<td rowspan="2" id="title" width="60%" nowrap="nowrap">
<h1>tk/event</h1>
</td>
 
<td style="vertical-align: top; background-image: url(../res/css/examples/navigationtree/BlueGray/SchattenOst.gif); background-repeat: repeat-y; "><img src="../res/css/examples/navigationtree/BlueGray/SchattenNordOst.gif" width="7" height="7" /></td>
 
<td><img src="../res/css/examples/navigationtree/BlueGray/bg_02_05.gif" width="41" height="7" /></td>
</tr>
 
<tr>
<td style="background-image: url(../res/css/examples/navigationtree/BlueGray/SchattenOst.gif)"><img src="../res/css/examples/navigationtree/BlueGray/SchattenOst.gif" /></td>
 
<td></td>
</tr>
 
<tr>
<td class="navicolumn"><img src="../res/css/examples/navigationtree/BlueGray/bg_00.gif" /></td>
 
<td class="navicolumn" align="right"><img src="../res/css/examples/navigationtree/BlueGray/SchattenNavi.gif" width="136" height="8" /></td>
 
<td style="background-image: url(../res/css/examples/navigationtree/BlueGray/SchattenSued.gif); background-repeat: repeat-x"><img src="../res/css/examples/navigationtree/BlueGray/SchattenSued.gif" width="100%" height="8" /></td>
 
<td><img src="../res/css/examples/navigationtree/BlueGray/SchattenSuedOst.gif" width="7" height="8" /></td>
 
<td width="80%"><img src="../res/css/examples/navigationtree/BlueGray/bg_04_05.gif" width="41" height="8" /></td>
</tr>
 
<tr>
<td class="navicolumn">&#160;</td>
 
<td height="100%" nowrap="nowrap" class="navicolumn" id="navi">

<ul>
<li><a href="../Preface.htm" target="_top">Preface</a></li>
<li><a href="../Introduction.htm" target="_top">Introduction</a></li>
<li><a href="../Tutorial.htm" target="_top">Tutorial</a></li>
<li><a href="../Implementation.htm" target="_top">Implementation</a></li>
<li><a href="../Commands.htm" target="_top">Commands</a>
<ul>
<li><a href="bitmap.htm" target="_top">bitmap</a></li>
<li><a href="evalwish.htm" target="_top">eval-wish</a></li>
<li><a href="gettkvar.htm" target="_top">get-tk-var</a></li>
<li><a href="photo.htm" target="_top">photo</a></li>
<li><a href="settkvar.htm" target="_top">set-tk-var!</a></li>
<li><a href="tk.htm" target="_top">tk</a></li>
<li><a href="tkidwidget.htm" target="_top">tk-id-&gt;widget</a></li>
<li><a href="tkvar.htm" target="_top">tk-var</a></li>
<li><a href="tkafter.htm" target="_top">tk/after</a></li>
<li><a href="tkappname.htm" target="_top">tk/appname</a></li>
<li><a href="tkbind.htm" target="_top">tk/bind</a></li>
<li><a href="tkbindtags.htm" target="_top">tk/bindtags</a></li>
<li><a href="tkcaret.htm" target="_top">tk/caret</a></li>
<li><a href="tkchoosecolor.htm" target="_top">tk/choosecolor</a></li>
<li><a href="tkchoosedirectory.htm" target="_top">tk/choosedirectory</a></li>
<li><a href="tkclipboard.htm" target="_top">tk/clipboard</a></li>
<li><a href="tkconsole.htm" target="_top">tk/console</a></li>
<li><a href="tkdestroy.htm" target="_top">tk/destroy</a></li>
<li><a href="tkdialog.htm" target="_top">tk/dialog</a></li>
<li id="actualdocument"><a>tk/event</a>
<ul>
<li><a href="event/tkevent_add.htm" target="_top">add</a></li>
<li><a href="event/tkevent_delete.htm" target="_top">delete</a></li>
<li><a href="event/tkevent_generate.htm" target="_top">generate</a></li>
<li><a href="event/tkevent_info.htm" target="_top">info</a></li>
</ul></li>
<li><a href="tkfocus.htm" target="_top">tk/focus</a></li>
<li><a href="tkgetopenfile.htm" target="_top">tk/getopenfile</a></li>
<li><a href="tkgetsavefile.htm" target="_top">tk/getsavefile</a></li>
<li><a href="tkgrab.htm" target="_top">tk/grab</a></li>
<li><a href="tkgrid.htm" target="_top">tk/grid</a></li>
<li><a href="tkimage.htm" target="_top">tk/image</a></li>
<li><a href="tklower.htm" target="_top">tk/lower</a></li>
<li><a href="tkmessagebox.htm" target="_top">tk/messagebox</a></li>
<li><a href="tkoption.htm" target="_top">tk/option</a></li>
<li><a href="tkpack.htm" target="_top">tk/pack</a></li>
<li><a href="tkplace.htm" target="_top">tk/place</a></li>
<li><a href="tkpopup.htm" target="_top">tk/popup</a></li>
<li><a href="tkraise.htm" target="_top">tk/raise</a></li>
<li><a href="tkscaling.htm" target="_top">tk/scaling</a></li>
<li><a href="tkupdate.htm" target="_top">tk/update</a></li>
<li><a href="tkuseinputmethods.htm" target="_top">tk/useinputmethods</a></li>
<li><a href="tkwait.htm" target="_top">tk/wait</a></li>
<li><a href="tkwindowingsystem.htm" target="_top">tk/windowingsystem</a></li>
<li><a href="tkwinfo.htm" target="_top">tk/winfo</a></li>
<li><a href="tkwm.htm" target="_top">tk/wm</a></li>
</ul></li>
<li><a href="../Options.htm" target="_top">Options</a></li>
<li><a href="../Extensions.htm" target="_top">Extensions</a></li>
<li><a href="../List_of_Changes.htm" target="_top">Changes</a></li>
</ul></td>
 
<td colspan="3" style="vertical-align: top; padding-top: 1em; padding-left: 16px" id="content">


    <p>The event command provides several facilities for dealing with window system events, such as defining virtual events and synthesizing events. The command has several different forms, determined by the first argument. The following forms are currently supported:</p>
  
    
<!-- embed -->

    <ul>
      <li><a href="event/tkevent_add.htm" target="_top">tk/event add</a></li> 
      <li><a href="event/tkevent_delete.htm" target="_top">tk/event delete</a></li> 
      <li><a href="event/tkevent_generate.htm" target="_top">tk/event generate</a></li> 
      <li><a href="event/tkevent_info.htm" target="_top">tk/event info</a></li>
    </ul>
<!-- /embed -->

  
    <h1>Event Fields</h1>
  
    <p>The following options are supported for the event generate command. These correspond to the <code>%</code> expansions allowed in binding scripts for the bind command.</p>
  
    <dl>
      <dt>#:above window</dt>
    
      <dd>Window specifies the above field for the event, either as a window path name or as an integer window id. Valid for Configure events. Corresponds to the <code>%a</code> substitution for binding scripts.</dd>
    
      <dt>#:borderwidth size</dt>
    
      <dd>Size must be a screen distance; it specifies the border_width field for the event. Valid for Configure events. Corresponds to the <code>%B</code> substitution for binding scripts.</dd>
    
      <dt>#:button number</dt>
    
      <dd>Number must be an integer; it specifies the detail field for a ButtonPress or ButtonRelease event, overriding any button number provided in the base event argument. Corresponds to the <code>%b</code> substitution for binding scripts.</dd>
    
      <dt>#:count number</dt>
    
      <dd>Number must be an integer; it specifies the count field for the event. Valid for Expose events. Corresponds to the <code>%c</code> substitution for binding scripts.</dd>
    
      <dt>#:delta number</dt>
    
      <dd>Number must be an integer; it specifies the delta field for the MouseWheel event. The delta refers to the direction and magnitude the mouse wheel was rotated. Note the value is not a screen distance but are units of motion in the mouse wheel. Typically these values are multiples of 120. For example, 120 should scroll the text widget up 4 lines and -240 would scroll the text widget down 8 lines. Of course, other widgets may define different behaviors for mouse wheel motion. This field corresponds to the <code>%D</code> substitution for binding scripts.</dd>
    
      <dt>#:detail detail</dt>
    
      <dd>Detail specifies the detail field for the event and must be one of the following:
        <ul>
          <li>NotifyAncestor NotifyNonlinearVirtual</li>
        
          <li>NotifyDetailNone NotifyPointer</li>
        
          <li>NotifyInferior NotifyPointerRoot</li>
        
          <li>NotifyNonlinear NotifyVirtual</li>
        </ul>
      
        <p>Valid for Enter, Leave, FocusIn and FocusOut events. Corresponds to the <code>%d</code> substitution for binding scripts.</p>
      </dd>
    
      <dt>#:focus boolean</dt>
    
      <dd>Boolean must be a boolean value; it specifies the focus field for the event. Valid for Enter and Leave events. Corresponds to the <code>%f</code> substitution for binding scripts.</dd>
    
      <dt>#:height size</dt>
    
      <dd>Size must be a screen distance; it specifies the height field for the event. Valid for Configure events. Corresponds to the <code>%h</code> substitution for binding scripts.</dd>
    
      <dt>#:keycode number</dt>
    
      <dd>Number must be an integer; it specifies the keycode field for the event. Valid for KeyPress and KeyRelease events. Corresponds to the <code>%k</code> substitution for binding scripts.</dd>
    
      <dt>#:keysym name</dt>
    
      <dd>Name must be the name of a valid keysym, such as g, space, or Return; its corresponding keycode value is used as the keycode field for event, overriding any detail specified in the base event argument. Valid for KeyPress and KeyRelease events. Corresponds to the <code>%K</code> substitution for binding scripts.</dd>
    
      <dt>#:mode notify</dt>
    
      <dd>Notify specifies the mode field for the event and must be one of NotifyNormal, NotifyGrab, NotifyUngrab, or NotifyWhileGrabbed. Valid for Enter, Leave, FocusIn, and FocusOut events. Corresponds to the <code>%m</code> substitution for binding scripts.</dd>
    
      <dt>#:override boolean</dt>
    
      <dd>Boolean must be a boolean value; it specifies the override_redirect field for the event. Valid for Map, Reparent, and Configure events. Corresponds to the <code>%o</code> substitution for binding scripts.</dd>
    
      <dt>#:place where</dt>
    
      <dd>Where specifies the place field for the event; it must be either PlaceOnTop or PlaceOnBottom. Valid for Circulate events. Corresponds to the <code>%p</code> substitution for binding scripts.</dd>
    
      <dt>#:root window</dt>
    
      <dd>Window must be either a window path name or an integer window identifier; it specifies the root field for the event. Valid for KeyPress, KeyRelease, ButtonPress, ButtonRelease, Enter, Leave, and Motion events. Corresponds to the <code>%R</code> substitution for binding scripts.</dd>
    
      <dt>#:rootx coord</dt>
    
      <dd>Coord must be a screen distance; it specifies the x_root field for the event. Valid for KeyPress, KeyRelease, ButtonPress, ButtonRelease, Enter, Leave, and Motion events. Corresponds to the <code>%X</code> substitution for binding scripts.</dd>
    
      <dt>#:rooty coord</dt>
    
      <dd>Coord must be a screen distance; it specifies th y_root field for the event. Valid for KeyPress, KeyRelease, ButtonPress, ButtonRelease, Enter, Leave, and Motion events. Corresponds to the <code>%Y</code> substitution for binding scripts.</dd>
    
      <dt>#:sendevent boolean</dt>
    
      <dd>Boolean must be a boolean value; it specifies the send_event field for the event. Valid for all events. Corresponds to the <code>%E</code> substitution for binding scripts.</dd>
    
      <dt>#:serial number</dt>
    
      <dd>Number must be an integer; it specifies the serial field for the event. Valid for all events. Corresponds to the <code>%#</code> substitution for binding scripts.</dd>
    
      <dt>#:state state</dt>
    
      <dd>State specifies the state field for the event. For KeyPress, KeyRelease, ButtonPress, ButtonRelease, Enter, Leave, and Motion events it must be an integer value. For Visibility events it must be one of VisibilityUnobscured, VisibilityPartiallyObscured, or VisibilityFullyObscured. This option overrides any modifiers such as Meta or Control specified in the base event. Corresponds to the <code>%s</code> substitution for binding scripts.</dd>
    
      <dt>#:subwindow window</dt>
    
      <dd>Window specifies the subwindow field for the event, either as a path name for a Tk widget or as an integer window identifier. Valid for KeyPress, KeyRelease, ButtonPress, ButtonRelease, Enter, Leave, and Motion events. Similar to <code>%S</code> substitution for binding scripts.</dd>
    
      <dt>#:time integer</dt>
    
      <dd>Integer must be an integer value; it specifies the time field for the event. Valid for KeyPress, KeyRelease, ButtonPress, ButtonRelease, Enter, Leave, Motion, and Property events. Corresponds to the <code>%t</code> substitution for binding scripts.</dd>
    
      <dt>#:warp boolean</dt>
    
      <dd>boolean must be a boolean value; it specifies whether the screen pointer should be warped as well. Valid for KeyPress, KeyRelease, ButtonPress, ButtonRelease, and Motion events. The pointer will only warp to a window if it is mapped.</dd>
    
      <dt>#:width size</dt>
    
      <dd>Size must be a screen distance; it specifies the width field for the event. Valid for Configure events. Corresponds to the <code>%w</code> substitution for binding scripts.</dd>
    
      <dt>#:when when</dt>
    
      <dd>When determines when the event will be processed; it must have one of the following values:
        <dl>
          <dt>now</dt>
        
          <dd>Process the event immediately, before the command returns. This also happens if the #:when option is omitted.</dd>
        
          <dt>tail</dt>
        
          <dd>Place the event on Tcl's event queue behind any events already queued for this application.</dd>
        
          <dt>head</dt>
        
          <dd>Place the event at the front of Tcl's event queue, so that it will be handled before any other events already queued.</dd>
        
          <dt>mark</dt>
        
          <dd>Place the event at the front of Tcl's event queue but behind any other events already queued with #:when mark. This option is useful when generating a series of events that should be processed in order but at the front of the queue.</dd>
        </dl>
      </dd>
    
      <dt>#:x coord</dt>
    
      <dd>Coord must be a screen distance; it specifies the x field for the event. Valid for KeyPress, KeyRelease, ButtonPress, ButtonRelease, Motion, Enter, Leave, Expose, Configure, Gravity, and Reparent events. Corresponds to the the <code>%x</code> substitution for binding scripts. If Window is empty the coordinate is relative to the screen, and this option corresponds to the <code>%X</code> substitution for binding scripts.</dd>
    
      <dt>#:y coord</dt>
    
      <dd>Coord must be a screen distance; it specifies the y field for the event. Valid for KeyPress, KeyRelease, ButtonPress, ButtonRelease, Motion, Enter, Leave, Expose, Configure, Gravity, and Reparent events. Corresponds to the the <code>%y</code> substitution for binding scripts. If Window is empty the coordinate is relative to the screen, and this option corresponds to the <code>%Y</code> substitution for binding scripts.</dd>
    </dl>
  
    <p>Any options that are not specified when generating an event are filled with the value 0, except for serial, which is filled with the next X event serial number.</p>
  
    <h1>Virtual event examples</h1>
  
    <p>In order for a virtual event binding to trigger, two things must happen. First, the virtual event must be defined with the tk/event add command. Second, a binding must be created for the virtual event with the bind command. Consider the following virtual event definitions:</p>
  
    <pre>
(tk/event 'add '&lt;&lt;Paste>> '&lt;Control-y>)
(tk/event 'add '&lt;&lt;Paste>> '&lt;Button-2>)
(tk/event 'add '&lt;&lt;Save>> '&lt;Control-X> '&lt;Control-S>)
(tk/event 'add '&lt;&lt;Save>> '&lt;Shift-F12>)
</pre>
  
    <p>In the bind command, a virtual event can be bound like any other builtin event type as follows:</p>
  
    <pre>
(tk/bind 'Entry '&lt;&lt;Paste>>
  `(,(lambda (w) (w 'insert (tk/selection 'get))) %W))
</pre>
  
    <p>The double angle brackets are used to specify that a virtual event is being bound. If the user types Control-y or presses button 2, or if a <code>&lt;&lt;Paste>></code> virtual event is synthesized with <code>(tk/event generate)</code>, then the <code>&lt;&lt;Paste>></code> binding will be invoked.</p>
  
    <p>If a virtual binding has the exact same sequence as a separate physical binding, then the physical binding will take precedence. Consider the following example:</p>
  
    <pre>
(tk/event 'add '&lt;&lt;Paste>> '&lt;Control-y> '&lt;Meta-Control-y>)
(tk/bind 'Entry '&lt;Control-y> (lambda () (print Control-y)))
(tk/bind 'Entry '&lt;&lt;Paste>> (lambda () (print Paste)))
</pre>
  
    <p>When the user types Control-y the <code>&lt;Control-y></code> binding will be invoked, because a physical event is considered more specific than a virtual event, all other things being equal. However, when the user types Meta-Control-y the <code>&lt;&lt;Paste>></code> binding will be invoked, because the Meta modifier in the physical pattern associated with the virtual binding is more specific than the <code>&lt;Control-y></code> sequence for the physical event.</p>
  
    <p>Bindings on a virtual event may be created before the virtual event exists. Indeed, the virtual event never actually needs to be defined, for instance, on platforms where the specific virtual event would meaningless or ungeneratable.</p>
  
    <p>When a definition of a virtual event changes at run time, all windows will respond immediately to the new definition. Starting from the preceding example, if the following code is executed:</p>
  
    <pre>
(tk/bind '&lt;Entry> '&lt;Control-y> ())
(tk/event 'add '&lt;&lt;Paste>> '&lt;Key-F6>)
</pre>
  
    <p>the behavior will change such in two ways. First, the shadowed <code>&lt;&lt;Paste>></code> binding will emerge. Typing Control-y will no longer invoke the <code>&lt;Control-y></code> binding, but instead invoke the virtual event <code>&lt;&lt;Paste>></code>. Second, pressing the F6 key will now also invoke the <code>&lt;&lt;Paste>></code> binding.</p>
  
    <hr />
  
    <p>Corresponding Tcl/Tk command:</p>
  
    <pre>
event ...
</pre>
  

<hr />

<p>
&copy; <a href="../Meta/Author.htm" target="_top">Author</a> 
 | <a href="../../index.htm" target="_top">Home</a> 
 | <a href="../Meta/Sitemap.htm" target="_top">Sitemap</a> 
</p>
</td>
</tr>
</table>

</body>
</html>
